----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) First code  of express.js


const express = require('express');
const app = express();

app.get("/",(req,res)=>{
    res.send("hello from express");
})

app.get("/about",(req,res)=>{
    res.send("Hello from About page");
})

app.listen(8000,()=>{
    console.log("listening on port 8000");
})


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2) Routing in express.js

const express = require('express');
const app = express();

app.get('/',(req,res)=>{
    res.send("Hello from Home Page");
})

app.get("/about",(req,res)=>{
    res.send("Hello from about us page");
})

app.get("/contact",(req,res)=>{
    res.send("Hello from contact us page");
})

app.listen(8000,()=>{
    console.log("Listening to the port 8000");
})

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3) Template Engine in express

// there are many template engines are there but 'pug' is one of the most widely used template engine
/*a template engine is a module that allows you to render dynamic HTML content on the server side. Express.js supports 
various template engines, and they all serve the same fundamental purpose: generating dynamic HTML by combining templates with data.*/

const express = require('express');
const path = require('path');
const app = express();


//Set Up the View Engine and Views Directory:
const templatePath = path.join(__dirname,'/view');
app.set("view engine","pug");
app.set("views",templatePath);

//When a user accesses the root URL (/), the server renders the index.pug template and sends the HTML content to the client.
app.get('/',(req,res)=>{
    res.render("index")
})

// it follows top down approach so it will display top content always
app.get('/',(req,res)=>{
    res.render("hey hello");
})

app.listen(8000,()=>{
    console.log("Listening on port 8000");
})

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4) Partials 

    (a) app.js 

        /* Partials are a way to break down large templates into smaller, reusable components in template engines like Pug, EJS, 
        and Handlebars. They allow you to define a piece of a template and reuse it in multiple other templates. Partials are 
        particularly useful for parts of a webpage that are common across multiple pages, such as headers, footers, navigation 
        bars, and widgets.
        */
        
        const express = require('express');
        const app = express();
        const pug = require('pug');
        const path = require('path');
        
        const templatePath = path.join(__dirname , './view');
        
        app.set("view engine",'pug');
        app.set("views",templatePath);
        
        app.get("/",(req,res)=>{
            res.render("index");
        })
        
        app.listen(8000,()=>{
            console.log("Listening on port 8000");
        })


    (b) Index.pug

        doctype html
        html(lang="en")
            head
                meta(charset="UTF-8")
                meta(name="viewport", content="width=device-width, initial-scale=1.0")
                title Document
            body 
                include ../partials/Header 
                h1 Hey this is sairaj from Pug template Engine 
                p pug is a high performance template engine 
                p so enjoy your time with pug 
                include ../partials/Footer 



    (c) Header.pug

        doctype html
            html(lang="en")
                head
                    meta(charset="UTF-8")
                    meta(name="viewport", content="width=device-width, initial-scale=1.0")
                    title Header
                body 
                h1 hello this is the header part of our site


    (d) Footer.pug

        doctype html
        html(lang="en")
            head
                meta(charset="UTF-8")
                meta(name="viewport", content="width=device-width, initial-scale=1.0")
                title Footer
            body 
            h2 hello this is footer part of our site 



----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

5) 
    


